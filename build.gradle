// gradle clean test run

apply plugin: 'idea'
apply plugin: 'scala'
apply plugin: 'jetty'
apply plugin: 'eclipse'

ext.jettyVersion = '9.2.5.v20141112'

repositories { jcenter() }

dependencies {
    compile "org.scala-lang:scala-library:$scalaVer",
            "org.slf4j:slf4j-api:$slf4jVer",
            "org.scala-js:scalajs-library_$scalaJsVer"
    
    testCompile "junit:junit:$jUnitVer",
                "org.scalactic:scalactic_$scalatestVer",
                "org.scalatest:scalatest_$scalatestVer",
                "org.specs2:specs2_$specs2Ver"
}

test {
    systemProperties 'property': 'value'
}

task run(type: JavaExec, dependsOn: classes) {
    main = 'com.daggerok.scalajs.web.Main'
    classpath sourceSets.main.runtimeClasspath,
              configurations.runtime
}

clean {
    delete "$rootProject.projectDir/build"
    delete "$rootProject.projectDir/target"
    delete "$rootProject.projectDir/src/main/webapp"
}

task buildScalaJSLauncher(type:Exec, dependsOn: 'buildScalaJS') {
    workingDir '.'
    commandLine 'sbt', '-no-share', 'scalaJSLauncher'
}

task buildScalaJS(type:Exec) {
    workingDir '.'
    commandLine 'sbt', '-no-share', 'fullOptJS'
}

task www(type: Copy) {
    from('./src/main/www')
    into('./src/main/webapp')
    include('*.html')
}

task deployScalaJS(type: Copy, dependsOn: ['www', 'buildScalaJSLauncher']) {
    from('./target/scala-2.11')
    into('./src/main/webapp')
    include('*.js')
    include('*.map')
}

task webjar(type: Jar, dependsOn: "jar") {
    from(fileTree("target/scala-2.11")) {  
        into "META-INF/resources" 
    }
}

jettyRun.dependsOn deployScalaJS
